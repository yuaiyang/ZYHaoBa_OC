学习记录：
	1.设置图标右上角图标（拨打电话页面展示），iOS7.0以后有更改，需要用户同意显示才可以
	2.设置定时器时，倒计时调用方法，按钮总是闪烁解决办法：将UIButton的类型由system改为custom
	3.Cell注册：[self.tableView registerNib:[UINib nibWithNibName:@"UsedTableViewCell" bundle:nil] forCellReuseIdentifier:ID_cell];注册以后需要在cell的xib做标示，否则容易混淆
	4.\t:相当于tab  \r\n：回车换行   \r：换行
	5.只有GET请求才可以使用系统自带的缓存进行缓存处理，POST请求只能是自己保存
	6.延展需要导入头文件；分类不需要导入头文件，程序一运行，分类自动导入
	7.在OC中，不允许直接修改"对象"的"结构体属性"的"成员"；但是允许修改"结构体属性"的"成员"
   	 eg：
   	 // 1. 取出frame
  	  CGRect frame = self.iconButton.frame;
   	 // 2. 修改结构体的成员
   	 frame.origin.y -= 20;
   	 // 3. 重新为对象的结构体属性赋值
   	 self.iconButton.frame = frame;

	8.magic number魔法数字 意思是在程序中出现直接数字 根本不知道是做什么的 这个时候可以把数字设置为枚举
	eg：
	// 枚举类型是解决魔法数字比较常用的手段
	typedef enum {
   	 kMovingDirTop = 10,
   	 kMovingDirBottom,
   	 kMovingDirLeft,
   	 kMovingDirRight,
	} kMovingDir;
	
	9.报错 i386：是指模拟器 arm？：是指真机
	10.一般设置初始位置使用frame，改变大小使用bounds，更改位置使用center，frame官方不建议用于更改位置
	11.当在使用懒加载加载控件时，如果懒加载控件时内部已经设定初始位置frame，那么在第一次使用后的后续使用尽量使用 _ 而别使用 self. 原因在于他会重新走getter方法，那么就会重新设置其frame
	12.在OC中，懒加载用的非常多，懒加载是在最需要的时候才会创建对象，可以用于处理依赖关系时调用

图片查看器 学习知识点
	13.在进行判断时，如果只是判断是否（YES/NO）那么可以使用一句话搞定 eg：
	if (self.index == 4) {
        self.rightButton.enabled = NO;
    } else {
        self.rightButton.enabled = YES;
    }
    可以写为如下：（后面加上（）是为了方便别人读懂代码）
    self.rightButton.enabled = (self.index != 4);
	
	14.当对一个数据进行++或者—- 时 可以设置其tag值为 -1或者+1 那么调用时直接使用tag值进行判断，可以精简代码 eg：
	self.index += button.tag;
	这样可以根据按钮tag，设置其index++ 或者 —- 不用写一堆判断
	15.当代码中会用到switch 然而参数又很多时，可以考虑数组搭配字典进行处理 eg：
	// 设置图像和描述
    switch (self.index) {
        case 0:
            self.iconImage.image = [UIImage imageNamed:@"biaoqingdi"];
            self.descLabel.text = @"表情";
            break;
        case 1:
            self.iconImage.image = [UIImage imageNamed:@"bingli"];
            self.descLabel.text = @"病例";
            break;
        case 2:
            self.iconImage.image = [UIImage imageNamed:@"chiniupa"];
            self.descLabel.text = @"吃牛扒";
            break;
        case 3:
            self.iconImage.image = [UIImage imageNamed:@"danteng"];
            self.descLabel.text = @"蛋疼";
            break;
        case 4:
            self.iconImage.image = [UIImage imageNamed:@"wangba"];
            self.descLabel.text = @"王八";
            break;
    }
	可以更换为：
	- (NSArray *)imageList
{
    if (_imageList == nil) {
        
        NSDictionary *dict1 = @{@"name": @"biaoqingdi", @"desc": @"表情1"};
        NSDictionary *dict2 = @{@"name": @"bingli", @"desc": @"病例1"};
        NSDictionary *dict3 = @{@"name": @"chiniupa", @"desc": @"吃牛扒1"};
        NSDictionary *dict4 = @{@"name": @"danteng", @"desc": @"蛋疼1"};
        NSDictionary *dict5 = @{@"name": @"wangba", @"desc": @"网吧1"};
        
        _imageList = @[dict1, dict2, dict3, dict4, dict5];
    }
    return _imageList;
}
	// 设置图像和描述
    self.iconImage.image = [UIImage imageNamed:self.imageList[self.index][@"name"]];
    self.descLabel.text = self.imageList[self.index][@"desc"];
	这样处理以后，增加数据什么的就方便多啦
	
	16."包" Bundle [NSBundle mainBundle]编译安装之后对应的程序包
        NSString *path = [[NSBundle mainBundle] pathForResource:@"ImageList" ofType:@"plist"];
        NSLog(@"%@", path);
	// 在OC中ContentsOfFile，通常需要完整的路径
        _imageList = [NSArray arrayWithContentsOfFile:path];
        NSLog(@"%@", _imageList);

	17.ARC中dealloc主要用于调试，判断对象是否被释放 eg：创建一个NSObject 里面调用
	18. 重构的目的：让相同的代码只出现一次；在OC中，很多方法的第一个参数，都是触发该方法的对象！
	19. 在OC中：1>如果对象没有强引用，会被立即释放 2>默认的对象，都是强引用的 __weak 表示弱引用

	20.对于图片的一些总结：
		重构-抽取代码
 		方法：
 		1> 将重复代码复制到新的方法中
 		2> 根据需要调整参数
 		关于图像的实例化
 		imageNamed：系统推荐使用的，但是图像实例化之后的释放由系统负责
 		如果要自己释放图片，不能使用imageNamed方法！
 		而需要使用imageWithContentsOfFile
 		提示：如果放在Images.xcassets中的图片，不能使用imageWithContentsOfFile
 		Images.xcassets中不要 存放大的，不常用的图片
	21.OC中补0方法： eg：
		NSString *imageName = [NSString stringWithFormat:@"%@_%02d.jpg", name, i];表示不足2位数字前面补0，即如果是1，那么显示就是01 上面数字更改为03那么就是不足3位补0；即如果是1，那么就显示001
	22.OC中如果使用：UIImage *image = [UIImage imageNamed:imageName];那么是系统自动管理内存，一般图片过多过大会造成直接崩溃；因此可以更改为自己管理内存 eg：
		NSString *path = [[NSBundle mainBundle] pathForResource:imageName ofType:nil];
        	UIImage *image = [UIImage imageWithContentsOfFile:path];
		然后把图片存到自定义数组，当图片使用完成后，数组致空即可，一般用于数组帧动画：self.tom.animationImages = arrayM; 动画结束后：调用 [self.tom performSelector:@selector(setAnimationImages:) withObject:nil afterDelay:self.tom.animationDuration]; 意思是self.tom.animationDuration执行时间后调用setAnimationImages:为nil 那么内存就恢复了
	23.取出当前按钮标题文字：sender.currentTitle ；currentTitle 可以取出按钮当前的标题文字
	
	24.@property：1> 生成getter方法 2>生成setter方法 3>生成带下划线的成员变量（记录属性内容;readonly的属性不会生成带下划线的成员变量！;如果在对象中需要使用其成员变量：可以：// 合成指令，主动指定属性使用的成员变量名称 @synthesize image = _image;《@property (nonatomic, strong, readonly) UIImage *image;调用其getter方法需要其成员变量，但是会报错处理办法，以上@synthesize image = _image;中_image可以随意命名，但是一般规则以上命名交规范》
	25.instancetype和id的区别在于，instancetype可以推断出其类方法类型是否匹配，如果不匹配会有警告，一般用于类方法返回值类型，它不可以作为参数类型 eg：+ (instancetype)appInfoWithDict:(NSDictionary *)dict;详见：九宫格模型参考
	
	26.团队开发，一般需要在自定义模型里写description方法，方便同事打印查看（对象描述方法，类似于java中的toString()，便于跟踪调试的） <详见：超级猜图>
	27.写代码一般先搭建整体思路，然后确定大框架，依次实现小功能，往往可以做到整体逻辑清晰，代码易于管理
	28.在成员方法中，如果给self赋值，只能在initXXX方法中进行
	   语法约定： 1> 所有的方法首字母小写 2> 当单词切换的时候，单词首字母大写（驼峰法） 3> 类名要大写
	29.数组乱序最好方法：由排序转变而来比较实用：eg：
	- (void)randamOptions
{
    // 对options数组乱序
    self.options = [self.options sortedArrayUsingComparator:^NSComparisonResult(NSString *str1, NSString *str2) {
        int seed = arc4random_uniform(2);
        
        if (seed) {
            return [str1 compare:str2];
        } else {
            return [str2 compare:str1];
        }
    }];
    NSLog(@"%@", self.options);
}
	30.按钮不能交互的情况：1>alpha <= 0.01 2>hidden = YES  3>userInteraction = NO 4>父视图不允许交互，也不能交互 5>在父视图可见范围内，可以交互，范围之外不能交互 最常见问题：在UIImageView上添加控件，点击无反应，原因UIImageView的用户交互没打开
	
	31.当调用别人的 SDK时会跳转页面，跳转页面在app退出后回来那么页面会返回到上一个页面，那么需要在JYAppDelegate的applicationDidEnterBackground方法调用返回，否则原有的页面就会返回上级页面
        eg：
        BOOL ret = [__UserDefaults boolForKey:kISLLPay];
        if (ret)    return;





注意：
	1.页面说明：首页：主要是一些学习资料汇总 二页:一幕了然 三页：一些常用功能演示 四页：主要是tabelView的使用，一些抽取，方便维护的做法值得学习

	2.afn更改主要是更改plist配置和代码修改，代码直接最新还原即可
	3.开发者如果使用了动态库不能上传至appStore，但是可以在企业版中使用；开发中使用静态库，那么是把静态库打包到内存中，因此有多少个程序使用到同一个静态库，那么内存就会复制多少份静态库；而动态库则是在需要使用的时候去调用，因此内存中只会存在一份动态库供使用到的程序去调用
	4.在静态库中如果有分类，那么调用分类方法程序会崩溃，解决办法项目->build settings->搜索Other Linker Flags 添加-ObjC解决（意味着所有代码都可以链接进来）
	5.继承自NSObject的方法类，只能使用类方法
	6.在UIImageView上添加控件，点击无反应，原因UIImageView的用户交互没打开
	
